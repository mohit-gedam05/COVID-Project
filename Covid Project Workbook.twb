<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidProjectWorkbook' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0di4v9q1rjthrv10z0wse0cskg5a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0hscvws1o0cfwe10xpbe30pso98m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Asus/Desktop/Data Analytics/Projects/COVID/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0hscvws1o0cfwe10xpbe30pso98m' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0hscvws1o0cfwe10xpbe30pso98m' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8968ECD5BC3F48DDBE41EEEAC323E7FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totaldeathcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totaldeathcount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Totaldeathcount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8968ECD5BC3F48DDBE41EEEAC323E7FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8968ECD5BC3F48DDBE41EEEAC323E7FF]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Asus/AppData/Local/Temp/TableauTemp/#TableauTemp_1x63g2k0ezbmvq18ce6dg0rhj39m.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/20/2024 05:19:26 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Totaldeathcount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Totaldeathcount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Totaldeathcount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8968ECD5BC3F48DDBE41EEEAC323E7FF'>
            <properties context=''>
              <relation connection='excel-direct.0hscvws1o0cfwe10xpbe30pso98m' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Totaldeathcount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0ez5cy11u304lx1h3p5bm01tqo2j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0qs1cqz0yvwbvc122bov10dplnne'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Asus/Desktop/Data Analytics/Projects/COVID/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qs1cqz0yvwbvc122bov10dplnne' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qs1cqz0yvwbvc122bov10dplnne' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_35282F71AC27447FA23611471155B5D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totaldeathcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totaldeathcount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Totaldeathcount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_35282F71AC27447FA23611471155B5D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_35282F71AC27447FA23611471155B5D7]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Asus/AppData/Local/Temp/TableauTemp/#TableauTemp_14c4tnt0u34hwi1h69j8x1t0p4vr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/20/2024 05:43:04 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Totaldeathcount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Totaldeathcount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Totaldeathcount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#4ba5ba'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#95cecf'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_35282F71AC27447FA23611471155B5D7'>
            <properties context=''>
              <relation connection='excel-direct.0qs1cqz0yvwbvc122bov10dplnne' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Totaldeathcount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau TAble 4)' inline='true' name='federated.18moexj0huerpf146altd15kqzyj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau TAble 4' name='excel-direct.0w09er60bfqdo91ayeqxu1hnam3u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Asus/Desktop/Data Analytics/Projects/COVID/Tableau TAble 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0w09er60bfqdo91ayeqxu1hnam3u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Highestinfectioncount' ordinal='3' />
            <column datatype='real' name='Percentpopulationinfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0w09er60bfqdo91ayeqxu1hnam3u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Highestinfectioncount' ordinal='3' />
            <column datatype='real' name='Percentpopulationinfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20A0EFB8E0B04F768867498B104DB84B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20A0EFB8E0B04F768867498B104DB84B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20A0EFB8E0B04F768867498B104DB84B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highestinfectioncount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highestinfectioncount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highestinfectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20A0EFB8E0B04F768867498B104DB84B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentpopulationinfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percentpopulationinfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20A0EFB8E0B04F768867498B104DB84B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_20A0EFB8E0B04F768867498B104DB84B]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Asus/AppData/Local/Temp/TableauTemp/#TableauTemp_1h8xw1a0d9lgmz1g50ynh09cpgbp.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/20/2024 05:20:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6184</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highestinfectioncount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highestinfectioncount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highestinfectioncount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54453</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentpopulationinfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentpopulationinfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentpopulationinfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73485</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#317097'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#93cdcf'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2e638d'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#306e96'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#337a9e'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3485a6'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3790ae'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#409cb5'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4ea7bb'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#62b1c1'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#74bbc6'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#85c5cb'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#96cfcf'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a8d9d3'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bce4d8'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_20A0EFB8E0B04F768867498B104DB84B'>
            <properties context=''>
              <relation connection='excel-direct.0w09er60bfqdo91ayeqxu1hnam3u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='Highestinfectioncount' ordinal='3' />
                  <column datatype='real' name='Percentpopulationinfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau Table 1 (Tableau Table 1)' inline='true' name='federated.1kq3p2v09kcknu1ebh5021p9hfzh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0sexnbd08h3f7f1agfiew00vxn9u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Asus/Desktop/Data Analytics/Projects/COVID/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0sexnbd08h3f7f1agfiew00vxn9u' name='Tableau Table 1' table='[&apos;Tableau Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0sexnbd08h3f7f1agfiew00vxn9u' name='Tableau Table 1' table='[&apos;Tableau Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Table 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Tableau Table 1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Tableau Table 1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Tableau Table 1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau Table 1' datatype='table' name='[__tableau_internal_object_id__].[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Asus/AppData/Local/Temp/TableauTemp/#TableauTemp_05aj62109zizlv1117f5w1qj8sk6.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/20/2024 05:12:23 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Table 1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Table 1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Table 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau Table 1' id='Tableau Table 1_7C1BD80EB34B4E3EAE5929CE552F4106'>
            <properties context=''>
              <relation connection='excel-direct.0sexnbd08h3f7f1agfiew00vxn9u' name='Tableau Table 1' table='[&apos;Tableau Table 1$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Table 1 (Tableau Table 1)' name='federated.1kq3p2v09kcknu1ebh5021p9hfzh' />
          </datasources>
          <datasource-dependencies datasource='federated.1kq3p2v09kcknu1ebh5021p9hfzh'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]' value='155' />
            <format attr='height' value='53' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[sum:DeathPercentage:qk]' value='n#,##0.000000;-#,##0.000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#aaaaff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0A04ADCD-AA6B-4B95-97D6-37E199F6BD16}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0ez5cy11u304lx1h3p5bm01tqo2j' />
          </datasources>
          <datasource-dependencies datasource='federated.0ez5cy11u304lx1h3p5bm01tqo2j'>
            <column datatype='integer' name='[Totaldeathcount]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Totaldeathcount]' derivation='Sum' name='[sum:Totaldeathcount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[sum:Totaldeathcount:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' value='153' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[sum:Totaldeathcount:qk]</rows>
        <cols>[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{ACCE94DA-CC8A-4148-BCC6-BA25D14C0D2D}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau TAble 4)' name='federated.18moexj0huerpf146altd15kqzyj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18moexj0huerpf146altd15kqzyj'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentpopulationinfected]' derivation='Sum' name='[sum:Percentpopulationinfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18moexj0huerpf146altd15kqzyj].[Longitude (generated)]' field-type='quantitative' max='58333539.479412399' min='32436947.085766643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18moexj0huerpf146altd15kqzyj].[Latitude (generated)]' field-type='quantitative' max='7859494.2506197989' min='-9354122.7921000347' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' value='Percent of Population Infected'>
              <formatted-text>
                <run>Percent of Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]' />
              <color column='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' />
              <geometry column='[federated.18moexj0huerpf146altd15kqzyj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18moexj0huerpf146altd15kqzyj].[Latitude (generated)]</rows>
        <cols>[federated.18moexj0huerpf146altd15kqzyj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C3BBAF3C-07D2-4637-A995-775075F95D22}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau TAble 4)' name='federated.18moexj0huerpf146altd15kqzyj' />
          </datasources>
          <datasource-dependencies datasource='federated.18moexj0huerpf146altd15kqzyj'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[Percentpopulationinfected]' derivation='Avg' name='[avg:Percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Percentpopulationinfected]' derivation='Avg' forecast-column-base='[avg:Percentpopulationinfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18moexj0huerpf146altd15kqzyj].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18moexj0huerpf146altd15kqzyj].[tmn:date:qk]' value='135' />
            <format attr='color' field='[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]' />
              <text column='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]' />
              <color column='[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' />
              <text column='[federated.18moexj0huerpf146altd15kqzyj].[fVal:avg:Percentpopulationinfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18moexj0huerpf146altd15kqzyj].[fVal:avg:Percentpopulationinfected:qk]</rows>
        <cols>[federated.18moexj0huerpf146altd15kqzyj].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A292D4CC-7D9F-4170-B3AD-C83A00C7A85C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths by Income Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0di4v9q1rjthrv10z0wse0cskg5a' />
          </datasources>
          <datasource-dependencies datasource='federated.0di4v9q1rjthrv10z0wse0cskg5a'>
            <column datatype='integer' name='[Totaldeathcount]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Totaldeathcount]' derivation='Sum' name='[sum:Totaldeathcount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[sum:Totaldeathcount:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' value='236' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.90055251121520996' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[sum:Totaldeathcount:qk]</rows>
        <cols>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{5102F873-FF9A-4FF9-B9F8-40E0CDD79758}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98028' id='8' param='horz' type-v2='layout-flow' w='99032' x='484' y='986'>
            <zone h='98028' id='6' type-v2='layout-basic' w='96432' x='484' y='986'>
              <zone h='13687' id='3' name='Sheet 1' w='29556' x='484' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='84341' id='5' name='Sheet 2' w='29556' x='484' y='14673'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='10' name='Sheet 3' w='33863' x='63053' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='12' name='Sheet 4' w='66876' x='30040' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='14' name='Sheet 5' w='33013' x='30040' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='43' h='98028' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='2600' x='96916' y='986'>
              <zone h='19235' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' type-v2='color' w='2600' x='96916' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9001' id='11' name='Sheet 3' pane-specification-id='3' param='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' type-v2='color' w='2600' x='96916' y='20221'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='20715' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]&#10;[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' type-v2='color' w='2600' x='96916' y='29222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14056' id='15' name='Sheet 5' pane-specification-id='0' param='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' type-v2='color' w='2600' x='96916' y='49937'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98028' id='18' param='vert' type-v2='layout-flow' w='99032' x='484' y='986'>
                <zone fixed-size='101' h='13687' id='3' is-fixed='true' name='Sheet 1' w='29556' x='484' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='14' is-fixed='true' name='Sheet 5' w='33013' x='30040' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14056' id='15' name='Sheet 5' pane-specification-id='0' param='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' type-v2='color' w='2600' x='96916' y='49937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='10' is-fixed='true' name='Sheet 3' w='33863' x='63053' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9001' id='11' name='Sheet 3' pane-specification-id='3' param='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' type-v2='color' w='2600' x='96916' y='20221'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84341' id='5' is-fixed='true' name='Sheet 2' w='29556' x='484' y='14673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19235' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' type-v2='color' w='2600' x='96916' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='12' is-fixed='true' name='Sheet 4' w='66876' x='30040' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='20715' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]&#10;[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' type-v2='color' w='2600' x='96916' y='29222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{782145ED-A2A8-4B95-B2F9-D57DA157A7E9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kq3p2v09kcknu1ebh5021p9hfzh].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{152D3E05-5A43-4ACA-97DF-C8FE171E2BFB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]</field>
            <field>[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E342FB2B-4E67-49A1-992A-9C5C4B8F4EBA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.18moexj0huerpf146altd15kqzyj].[sum:Percentpopulationinfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]</field>
            <field>[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]</field>
            <field>[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2511F987-0F33-4DAB-9221-584F3089C881}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]&#10;[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]</field>
            <field>[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]</field>
            <field>[federated.18moexj0huerpf146altd15kqzyj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{173F7079-457C-40AF-AF90-D4E0CB998BC5}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACAA5560-45A8-4249-A08D-40597C044A07}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ez5cy11u304lx1h3p5bm01tqo2j].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18moexj0huerpf146altd15kqzyj].[none:Forecast Indicator:nk]</field>
              <field>[federated.18moexj0huerpf146altd15kqzyj].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0di4v9q1rjthrv10z0wse0cskg5a].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{AEDCDBA6-5371-42AE-A085-2104540D2F93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      d63vy/L/A9OXqKORH8FVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='52' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      ey4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      is3/Ar7IHxkLxdJtAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
